image: debian:buster

stages:
  - build

before_script:
     - apt-get update
     - apt-get install -y gzip zip python3    # Just in case these don't already exist.
     - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py && rm -f get-pip.py
     - update-alternatives --install $HOME/.local/bin/python python /usr/bin/python2 10
     - update-alternatives --install $HOME/.local/bin/python python /usr/bin/python3 20
     - sudo update-alternatives --set python /usr/bin/python3 # Force the use of Python3 over Python2

variables:
    GIT_SUBMODULE_STRATEGY: recursive         # Ensure we have everything before attempting to build

build-0deps:
    stage: build
    script:
        - chmod -Rv u+x .elf_build/*
        - .elf_build/0deps.sh
    cache:
        key: "${CI_COMMIT_REF_SLUG}-vendors"
        paths:
            - vendor/
        policy: pull-push

build-1setup:
    stage: build
    script:
        - .elf_build/1setup.sh

build-2build:
    stage: build
    script:
        - .elf_build/2build.sh
        - zip build/CTFErrorLogger.so.zip build/CTFErrorLogger.ext.2.tf2/CTFErrorLogger.ext.2.tf2.so
        - gzip -9kc build/CTFErrorLogger.ext.2.tf2/CTFErrorLogger.ext.2.tf2.so > build/CTFErrorLogger.so.gz
    artifacts:
        paths:
            - build/CTFErrorLogger.ext.2.tf2/CTFErrorLogger.ext.2.tf2.so
            - build/CTFErrorLogger.zip
            - build/CTFErrorLogger.tar.gz
